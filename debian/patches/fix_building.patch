Work in progress...

Index: apktool/build.gradle
===================================================================
--- apktool.orig/build.gradle
+++ apktool/build.gradle
@@ -77,7 +77,6 @@ buildscript {
         options.incremental = true
     }
     dependencies {
-        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
     }
 }
 
@@ -92,12 +91,12 @@ subprojects {
                 antlr_runtime: 'org.antlr:antlr-runtime:3.5',
                 commons_cli: 'commons-cli:commons-cli:1.2',
                 commons_io: 'commons-io:commons-io:2.4',
-                commons_lang: 'org.apache.commons:commons-lang3:3.1',
-                findbugs: 'com.google.code.findbugs:jsr305:1.3.9',
+                commons_lang: 'org.apache.commons:commons-lang3:3.x',
+                findbugs: 'com.google.code.findbugs:jsr305:0.x',
                 guava: 'com.google.guava:guava:14.0',
                 jflex: 'de.jflex:jflex:1.4.3',
                 junit: 'junit:junit:4.6',
-                proguard_gradle: 'net.sf.proguard:proguard-gradle:5.2.1',
+                proguard: 'proguard:proguard:5.2.1',
                 snakeyaml: 'org.yaml:snakeyaml:1.12',
                 xmlpull: 'xpp3:xpp3:1.1.4c',
                 xmlunit: 'xmlunit:xmlunit:1.3',
Index: apktool/brut.apktool.smali/build.gradle
===================================================================
--- apktool.orig/brut.apktool.smali/build.gradle
+++ apktool/brut.apktool.smali/build.gradle
@@ -75,15 +75,15 @@ subprojects {
 
     ext {
         depends = [guava: 'com.google.guava:guava:18.0',
-                   findbugs: 'com.google.code.findbugs:jsr305:1.3.9',
+                   findbugs: 'com.google.code.findbugs:jsr305:0.x',
                    junit: 'junit:junit:4.6',
                    antlr_runtime: 'org.antlr:antlr-runtime:3.5.2',
                    antlr: 'org.antlr:antlr:3.5.2',
                    stringtemplate: 'org.antlr:stringtemplate:3.2.1',
                    commons_cli: 'commons-cli:commons-cli:1.2',
                    jflex: 'de.jflex:jflex:1.4.3',
-                   jflex_plugin: 'co.tomlee.gradle.plugins:gradle-jflex-plugin:0.0.1',
-                   proguard_gradle: 'net.sf.proguard:proguard-gradle:5.1',
+                   //jflex_plugin: 'co.tomlee.gradle.plugins:gradle-jflex-plugin:0.0.1',
+                   proguard: 'proguard:proguard:5.1',
                    dx: 'com.google.android.tools:dx:1.7'
         ]
     }
Index: apktool/brut.apktool.smali/baksmali/build.gradle
===================================================================
--- apktool.orig/brut.apktool.smali/baksmali/build.gradle
+++ apktool/brut.apktool.smali/baksmali/build.gradle
@@ -31,10 +31,11 @@
 
 buildscript {
     repositories {
+        flatDir { dirs '/usr/share/java' }
         mavenCentral()
     }
     dependencies {
-        classpath depends.proguard_gradle
+        classpath depends.proguard
     }
 }
 
Index: apktool/brut.apktool.smali/smali/build.gradle
===================================================================
--- apktool.orig/brut.apktool.smali/smali/build.gradle
+++ apktool/brut.apktool.smali/smali/build.gradle
@@ -30,16 +30,17 @@
  */
 
 apply plugin: 'antlr'
-apply plugin: 'jflex'
+//apply plugin: 'jflex'
 
 buildscript {
     repositories {
+        flatDir { dirs '/usr/share/java' }
         mavenCentral()
     }
 
     dependencies {
-        classpath depends.jflex_plugin
-        classpath depends.proguard_gradle
+        //classpath depends.jflex_plugin
+        classpath depends.proguard
     }
 }
 
@@ -50,7 +51,7 @@ configurations {
 
     // The jflex lexer doesn't have any runtime dependencies, so remove the dependency
     // that gets added by the jflex plugin
-    compile.exclude group: 'de.jflex', module: 'jflex'
+    //compile.exclude group: 'de.jflex', module: 'jflex'
 }
 
 idea {
@@ -78,7 +79,7 @@ dependencies {
     testCompile depends.junit
 
     antlr depends.antlr
-    jflex depends.jflex
+    //jflex depends.jflex
 }
 
 processResources.inputs.property('version', version)
@@ -103,9 +104,9 @@ generateGrammarSource {
     outputDirectory = new File(outputDirectory, 'org/jf/smali')
 }
 
-generateJFlexSource {
-    outputDirectory = new File(outputDirectory, 'org/jf/smali')
-}
+//generateJFlexSource {
+//    outputDirectory = new File(outputDirectory, 'org/jf/smali')
+//}
 
 task proguard(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
     def outFile = fatJar.destinationDir.getPath() + '/' + fatJar.baseName + '-' +
Index: apktool/brut.apktool/apktool-cli/build.gradle
===================================================================
--- apktool.orig/brut.apktool/apktool-cli/build.gradle
+++ apktool/brut.apktool/apktool-cli/build.gradle
@@ -13,7 +13,7 @@
  *  See the License for the specific language governing permissions and
  *  limitations under the License.
  */
-apply plugin: 'eu.appsatori.fatjar'
+//apply plugin: 'eu.appsatori.fatjar'
 
 dependencies {
     compile project(':brut.apktool:apktool-lib')
@@ -21,30 +21,31 @@ dependencies {
 
 buildscript {
     repositories {
+        flatDir { dirs '/usr/share/java' }
         mavenCentral()
     }
 
     dependencies {
-        classpath depends.proguard_gradle
+        classpath depends.proguard
     }
 }
 
 gradle.taskGraph.whenReady {
-  fatJar { 
-    manifest {
-      attributes("Main-Class": "brut.apktool.Main")
-    }
-  }
+  //fatJar { 
+  //  manifest {
+  //    attributes("Main-Class": "brut.apktool.Main")
+  //  }
+  //}
 }
 
 task cleanOutputDirectory(type: Delete) {
     delete fileTree(dir: jar.destinationDir.getPath(), exclude: "apktool-cli.jar")
 }
 
-task proguard(type: proguard.gradle.ProGuardTask, dependsOn: fatJar) {
+task proguard(type: proguard.gradle.ProGuardTask) {
     def outFile = jar.destinationDir.getPath() + '/' + "apktool" + '-' + project.apktool_version + '-small' + '.' + jar.extension
 
-    injars fatJar.archivePath
+    //injars fatJar.archivePath
     outjars outFile
 
     libraryjars "${System.properties['java.home']}/lib/rt.jar"
@@ -63,4 +64,4 @@ task proguard(type: proguard.gradle.ProG
 }
 
 proguard.dependsOn cleanOutputDirectory
-tasks.getByPath(':release').dependsOn(proguard)
\ No newline at end of file
+tasks.getByPath(':release').dependsOn(proguard)
Index: apktool/brut.apktool.smali/dexlib2/accessorTestGenerator/build.gradle
===================================================================
--- apktool.orig/brut.apktool.smali/dexlib2/accessorTestGenerator/build.gradle
+++ apktool/brut.apktool.smali/dexlib2/accessorTestGenerator/build.gradle
@@ -31,9 +31,9 @@
 
 dependencies {
     compile project(':brut.apktool.smali:util')
-    compile 'com.google.code.findbugs:jsr305:1.3.9'
+    compile 'com.google.code.findbugs:jsr305:0.x'
     compile 'com.google.guava:guava:13.0.1'
     compile 'org.antlr:ST4:4.0.7'
 
     testCompile 'junit:junit:4.6'
-}
\ No newline at end of file
+}
